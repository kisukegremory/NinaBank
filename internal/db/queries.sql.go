// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: queries.sql

package db

import (
	"context"
	"database/sql"
)

const createAccount = `-- name: CreateAccount :execresult
INSERT INTO Accounts (
    name,
    email,
    username,
    password
) VALUES (
    ?,
    ?,
    ?,
    ?
)
`

type CreateAccountParams struct {
	Name     string
	Email    string
	Username string
	Password string
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createAccount,
		arg.Name,
		arg.Email,
		arg.Username,
		arg.Password,
	)
}

const getAccount = `-- name: GetAccount :one
SELECT id, name, email, username, password FROM Accounts WHERE username = ? AND password = ? LIMIT 1
`

type GetAccountParams struct {
	Username string
	Password string
}

func (q *Queries) GetAccount(ctx context.Context, arg GetAccountParams) (Account, error) {
	row := q.db.QueryRowContext(ctx, getAccount, arg.Username, arg.Password)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Username,
		&i.Password,
	)
	return i, err
}
